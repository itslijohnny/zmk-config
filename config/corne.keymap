/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define MAC  4

/ {
        behaviors {
                hml: hml {
                compatible = "zmk,behavior-hold-tap";
                label = "HML";
                bindings = <&kp>, <&kp>;

                #binding-cells = <2>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                flavor = "balanced";
                hold-trigger-on-release;
                hold-trigger-key-positions = <6 7 8 9 10 15 18 19 20 21 22 30 31 32 33 34>;
                require-prior-idle-ms = <50>;
                };

                hmr: hmr {
                compatible = "zmk,behavior-hold-tap";
                label = "HMR";
                bindings = <&kp>, <&kp>;

                #binding-cells = <2>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                flavor = "balanced";
                hold-trigger-on-release;
                hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
                require-prior-idle-ms = <50>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

                label = "BASE";

                // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                // -------------------------------------------------------------------------------
                // |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
                // |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |      |
                // |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
                //                    | ESC | TAB | SPC |   | ENT | BSPC | DEL |
                bindings = <
      //╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
   &none &kp Q         &kp W          &kp E        &kp R         &kp T           &kp Y          &kp U         &kp I         &kp O         &kp P           &none
   &none &hml LCTRL A  &hml LALT S    &hml LGUI D  &hml LSHFT F  &kp G           &kp H          &hmr RSHFT J  &hmr RGUI K   &hmr LALT L   &hmr RCTRL SEMI &none
   &none &kp Z         &kp X          &kp C        &kp V         &kp B           &kp N          &kp M         &kp COMMA     &kp DOT       &kp FSLH        &none
                                      &kp LGUI     &mo 1         &kp SPACE   &kp RET &mo 2 &kp RALT
        
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
