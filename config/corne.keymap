/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define MAC  4

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 15 18 19 20 21 22 30 31 32 33 34>;
            require-prior-idle-ms = <50>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
            require-prior-idle-ms = <50>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ESC_COMBO {
            bindings = <&gresc>;
            key-positions = <1 2>;
        };

        BCSP_COMBO {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };

        LBR_COMBO {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 16>;
        };

        RBR_COMBO {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <5 17>;
        };

        SAVE_COMBOS {
            bindings = <&kp LC(S)>;
            key-positions = <24 13>;
        };

        LPAR_COMBOS {
            bindings = <&kp LPAR>;
            key-positions = <16 28>;
        };
    };

    macros {
        mac_save: mac_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MAC_SAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // -------------------------------------------------------------------------------
            // |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
            // |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |      |
            // |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
            //                    | ESC | TAB | SPC |   | ENT | BSPC | DEL |

            bindings = <
&none  &kp Q         &kp W        &kp E         &kp R         &kp T        &kp Y    &kp U            &kp I         &kp O        &kp P            &none
&none  &hml LCTRL A  &hml LALT S  &hml LGUI D   &hml LSHFT F  &kp G        &kp H    &hmr RSHFT J     &hmr RGUI K   &hmr LALT L  &hmr RCTRL SEMI  &none
&none  &kp Z         &kp X        &kp C         &kp V         &kp B        &kp N    &kp M            &kp COMMA     &kp DOT      &kp FSLH         &none
                                  &lt 1 ESCAPE  &lt 0 TAB     &kp SPACE    &kp RET  &lt 0 BACKSPACE  &lt 0 DELETE
            >;
        };

        num_layer {
            bindings = <
&trans  &trans            &kp N7              &kp N8        &kp N9         &trans    &trans  &kp N7         &kp N8        &kp N9        &trans             &trans
&trans  &kp LEFT_CONTROL  &hml LALT NUMBER_4  &hml LGUI N5  &hml LSHFT N6  &trans    &trans  &hmr RSHFT N4  &hmr LCMD N5  &hmr RALT N6  &kp RIGHT_CONTROL  &trans
&trans  &trans            &kp N1              &kp N2        &kp N3         &trans    &trans  &kp N1         &kp NUMBER_2  &kp N3        &trans             &trans
                                              &trans        &trans         &trans    &trans  &trans         &trans
            >;

            label = "NUM";
        };
    };
};
